<html><head><title>ScriptedPull.wsf</title></head><body style="font-family:Courier New; font-size:x-small"><div nowrap>&lt;job id&#61;&quot;commandlinepull&quot;&gt;<br>&lt;script language&#61;&quot;VBScript&quot;&gt;<br>'..................................................................................................................................<br>'...This wsf script can be invoked from a command prompt using:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; cscript scriptfile.wsf &quot;outputfile.xml&quot; &quot;DatasourceName&quot; &quot;SavedReportUserAlias&quot; &quot;SavedReportName&quot; MaxNumRows &quot;Arguments&quot;...<br>'...Where:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; scriptfile.wsf&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; - name of this script&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'... &nbsp;&nbsp;&nbsp; outputfile.xml &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; - name of the xml file to create to hold the data &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; DatasourceName&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; - name of the datasource to be queried&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; SavedReportUserAlias&nbsp; &nbsp; - user alias of the person owning the saved report&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; SavedReportName&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; - name of the saved report to be loaded&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; MaxNumRows&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; - maximum number of rows to return (0 for all)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; Arguments&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; - [optional] comma-separated list of search parameter values&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; bElementBased&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; - [optional] True returns Element based XML. Valid values: True/False (Default:False)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; ...<br>'...&nbsp; &nbsp; bXMLDateFormat&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; - [optional] True returns dates in XMLDate format. Valid values: True/False (Default:False)&nbsp; &nbsp;&nbsp; ...<br>'..................................................................................................................................<br>Dim strURL, oPoster, sOutputFileName, sDatasourceName, sSavedReportUserAlias, sSavedReportName, sMaxNumRows, sArguments, sElementBased, sXMLDateFormat, fso, fFile<br>'--- Make sure you are posting the data to the correct URL<br>strURL &#61; &quot;http://XMLInterface/XMLPullRS.asp&quot; &nbsp;&nbsp;&nbsp; <br>If WScript.Arguments.Count &lt; 5 Then<br>&nbsp;&nbsp; WScript.Echo &quot;Missing argument. Please check documentation.&quot;<br>&nbsp;&nbsp; WScript.Quit <br>End if<br>If WScript.Arguments.Count &gt; 8 Then<br>&nbsp;&nbsp; WScript.Echo &quot;Extra arguments. Please check documentation.&quot;<br>&nbsp;&nbsp; WScript.Quit <br>End If<br>'--- Read Script Arguments<br>sOutputFileName &#61; WScript.Arguments(0)<br>sDatasourceName &#61; WScript.Arguments(1)<br>sSavedReportUserAlias &#61; WScript.Arguments(2)<br>sSavedReportName &#61; WScript.Arguments(3)<br>sMaxNumRows &#61; WScript.Arguments(4)<br>sArguments &#61; &quot;&quot;<br>sElementBased&nbsp; &#61; &quot;False&quot;<br>sXMLDateFormat &#61; &quot;False&quot;<br>If WScript.Arguments.Count &gt; 5 Then<br>&nbsp;&nbsp;&nbsp;&nbsp; If WScript.Arguments(5) &#61; &quot;&quot; Then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sArguments &#61; &quot;&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; Else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sArguments &#61; WScript.Arguments(5)<br>&nbsp;&nbsp;&nbsp;&nbsp; End If<br>End If<br>If WScript.Arguments.Count &gt; 6 Then<br>&nbsp;&nbsp;&nbsp;&nbsp; If WScript.Arguments(6) &#61; &quot;&quot; Then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sElementBased &#61; &quot;False&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; Else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sElementBased &#61; WScript.Arguments(6)<br>&nbsp;&nbsp;&nbsp;&nbsp; End If<br>End If<br>If WScript.Arguments.Count &gt; 7 Then<br>&nbsp;&nbsp;&nbsp;&nbsp; If WScript.Arguments(7) &#61; &quot;&quot; Then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sXMLDateFormat &#61; &quot;False&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; Else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; sXMLDateFormat &#61; WScript.Arguments(7)<br>&nbsp;&nbsp;&nbsp;&nbsp; End If<br>End If<br>'--- Send the data<br>Set oPoster &#61; CreateObject(&quot;Microsoft.XMLHTTP&quot;)<br>oPoster.Open &quot;POST&quot;, strURL, 0<br>oPoster.SetRequestHeader &quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;<br>oPoster.Send &quot;sAction&#61;ScriptedPull2&amp;p1&#61;&quot; &amp; URLEncode(sDatasourceName) &amp; &quot;&amp;p2&#61;&quot; &amp; URLEncode(sSavedReportUserAlias) &amp; &quot;&amp;p3&#61;&quot; &amp; URLEncode(sSavedReportName) &amp; &quot;&amp;p4&#61;&quot; &amp; CInt(sMaxNumRows) &amp; &quot;&amp;p5&#61;&quot; &amp; URLEncode(sArguments) &amp; &quot;&amp;p6&#61;&quot; &amp; URLEncode(sElementBased) &amp; &quot;&amp;p7&#61;&quot; &amp; URLEncode(sXMLDateFormat)<br>'--- Check the return status<br>Select Case Left(oPoster.status, 3)<br>&nbsp;&nbsp;&nbsp;&nbsp; Case &quot;200&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo &quot;Processing was successful!&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; Case &quot;602&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo &quot;Processing was unsuccessful. Invalid request. Error information to follow.&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; Case &quot;604&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo &quot;Processing was unsuccessful. Database error. Error information to follow.&quot;<br>&nbsp; &nbsp;&nbsp; Case &quot;610&quot;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WScript.Echo &quot;Processing was unsuccessful. XmlInterface is currently not available. Please try later.&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; Case Else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo&nbsp; &quot;Processing returned an unexpected HTTP status code - &quot; &amp; oPoster.status<br>End Select<br>'--- See if we got valid XML back<br>If oPoster.responseXML.xml &lt;&gt; &quot;&quot; Then &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 'oPoster.responseXML is an XMLDocument object containing the query results<br>&nbsp;&nbsp;&nbsp;&nbsp; On Error Resume Next<br>&nbsp;&nbsp;&nbsp;&nbsp; '--- Write the XML to the output file<br>&nbsp;&nbsp;&nbsp;&nbsp; '--- The XML could be parsed here instead<br>&nbsp;&nbsp;&nbsp;&nbsp; Set fso &#61; CreateObject(&quot;Scripting.FileSystemObject&quot;)<br>&nbsp;&nbsp;&nbsp;&nbsp; Set fFile &#61; fso.CreateTextFile(sOutputFileName, True, True)<br>&nbsp;&nbsp;&nbsp;&nbsp; fFile.write(Replace(oPoster.responseXML.xml, &quot;&lt;?xml version&#61;&quot;&quot;1.0&quot;&quot;?&gt;&quot;, &quot;&lt;?xml version&#61;&quot;&quot;1.0&quot;&quot; encoding&#61;&quot;&quot;UTF-16&quot;&quot;?&gt;&quot;))<br>&nbsp;&nbsp;&nbsp;&nbsp; fFile.close()<br>&nbsp;&nbsp;&nbsp;&nbsp; Set fFile &#61; Nothing<br>&nbsp;&nbsp;&nbsp;&nbsp; Set fso &#61; Nothing<br>&nbsp;&nbsp;&nbsp;&nbsp; '--- Check for errors<br>&nbsp;&nbsp;&nbsp;&nbsp; '--- More sophisticated handling could also be done here<br>&nbsp;&nbsp;&nbsp;&nbsp; If Err.Number &gt; 0 Then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo &quot;Unable to output XML to file.&nbsp; XML results to follow.&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo oPoster.responseXML.xml<br>&nbsp;&nbsp;&nbsp;&nbsp; Else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo &quot;Results successfully written to file.&quot;&nbsp; &nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp; End If<br>Else<br>&nbsp;&nbsp;&nbsp;&nbsp; '--- Write error information, if any<br>&nbsp;&nbsp;&nbsp;&nbsp; '--- More sophisticated handling could also be done here<br>&nbsp;&nbsp;&nbsp;&nbsp; If Left(oPoster.status, 3) &#61; &quot;200&quot; Then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; WScript.Echo &quot;No XML results were returned.&nbsp; Text results to follow.&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; End If<br>&nbsp;&nbsp;&nbsp;&nbsp; WScript.Echo oPoster.responseText &nbsp;&nbsp;&nbsp; 'Error information would be here<br>End If<br>'&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;<br>'End of Script&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;<br>'&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;<br>'&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;<br>'Function: URLEncode&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#61;<br>'&nbsp; &nbsp; This function simply encodes all characters that are not&nbsp;&nbsp; &#61;<br>'&nbsp; &nbsp; valid in a URL.&nbsp; It is a direct implementation of ASP's&nbsp; &nbsp; &#61;<br>'&nbsp; &nbsp; built-in Server.URLEncode function&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &#61;<br>'&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;<br>Function URLEncode(tmpStr) <br>&nbsp;&nbsp;&nbsp;&nbsp; Dim temp, onechar<br>&nbsp;&nbsp;&nbsp;&nbsp; Const URLComponent_SET_OF_VALID_UNESCAPED_CHARACTERS &#61; &quot;abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ;/:@&#61;$-_.!*'(), &quot;<br>&nbsp;&nbsp;&nbsp;&nbsp; For j &#61; 1 To Len(tmpStr) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; onechar &#61; Mid(tmpStr, j, 1) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; If InStr(URLComponent_SET_OF_VALID_UNESCAPED_CHARACTERS, onechar) &#61; 0 Then <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ' Encode this character <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; temp &#61; temp + &quot;%&quot; + Hex(AscB(onechar)) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Else <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ' Good character <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; temp &#61; temp + onechar <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; End If <br>&nbsp;&nbsp;&nbsp;&nbsp; Next <br>&nbsp;&nbsp;&nbsp;&nbsp; URLEncode &#61; Replace(temp, &quot; &quot;, &quot;+&quot;)<br>End Function <br>&lt;/script&gt;<br>&lt;/job&gt;<br></div></body></html>